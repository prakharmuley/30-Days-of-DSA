Problem Link: https://leetcode.com/contest/weekly-contest-291/problems/k-divisible-elements-subarrays/



class Solution {
    public int countDistinct(int[] nums, int k, int p) {
        
    HashSet<String> hs = new HashSet<>();
    for(int i = 0 ;i<nums.length;i++){
        int c = 0 ;
        StringBuilder sb = new StringBuilder() ;
        for(int j = i ;j<nums.length ;j++){
        
        sb.append(Integer.toString(nums[j])+"->");
        
        if(nums[j]%p == 0){
        c++ ;
        }
        if(c<=k){
        String t = sb.toString();
        hs.add(t);    
        }
        if(c>k){
        break;
        }
        
        }
    }
    return hs.size();
    }
}
