Problem Link: https://practice.geeksforgeeks.org/problems/maximum-gcd-of-siblings-of-a-binary-tree/1#



// { Driver Code Starts
import java.io.*;
import java.util.*;

class GFG {
    public static void main(String args[]) throws IOException {
        BufferedReader read =
            new BufferedReader(new InputStreamReader(System.in));
        int t = Integer.parseInt(read.readLine());
        while (t-- > 0) {
            int N = Integer.parseInt(read.readLine());
            
            ArrayList<ArrayList<Integer>> arr = new ArrayList<>();
            
            for(int i=0; i<N-1; i++)
            {
                ArrayList<Integer> temp = new ArrayList<>();
                String S[] = read.readLine().split(" ");
                temp.add(Integer.parseInt(S[0]));
                temp.add(Integer.parseInt(S[1]));
                arr.add(temp);
            }

            Solution ob = new Solution();
            System.out.println(ob.maxBinTreeGCD(arr,N));
        }
    }
}// } Driver Code Ends


//User function Template for Java

class Solution {
    public static int _gcd(int x, int y)
    {
        if(y==0) return x;
        return _gcd(y,x%y);
    }
    static int maxBinTreeGCD(ArrayList<ArrayList<Integer>> arr, int N) {
        int mx=0;
        arr.sort((a,b)->a.get(0)-b.get(0));
        for(int i=0;i<arr.size()-1;i++)
        {
            if(arr.get(i).get(0)==arr.get(i+1).get(0)){
            int gcd=_gcd(arr.get(i).get(1),arr.get(i+1).get(1));
            mx=Math.max(gcd,mx);
            }
        }
        return mx;
    }
};
