class Solution {
    Boolean dp[][]=new Boolean[101][101];
    public boolean check(String s1, String s2, String s3, int i, int j, int k)
    {
        if(i==s1.length()&&j==s2.length()&&k==s3.length())
        {
            return true;
        }
        boolean ans=false;
        if(dp[i][j]!=null) return dp[i][j];
        if(i<s1.length()&&j<s2.length()&&s1.charAt(i)==s3.charAt(k)&&s2.charAt(j)==s3.charAt(k)){
            ans=ans|check(s1,s2,s3,i+1,j,k+1)|check(s1,s2,s3,i,j+1,k+1);
          
        }
        else if(i<s1.length()&&s1.charAt(i)==s3.charAt(k)){
         ans=ans|check(s1,s2,s3,i+1,j,k+1);
          
        }
        else if(j<s2.length()&&s2.charAt(j)==s3.charAt(k)){
            ans=ans|check(s1,s2,s3,i,j+1,k+1);
          
        }
        
        return dp[i][j]=ans;
    }
    public boolean isInterleave(String s1, String s2, String s3) {
        if(s1.length()+s2.length()>s3.length()) return false;
      return check(s1,s2,s3,0,0,0);
    }
}
