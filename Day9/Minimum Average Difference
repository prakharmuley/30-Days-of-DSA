Proble Link: https://leetcode.com/contest/biweekly-contest-77/problems/minimum-average-difference/



class Solution {
    public int minimumAverageDifference(int[] arr) {
        int n=arr.length;
        if(n==1) return 0;
        int idx=0;
        long p[]=new long [n+1];
        long s[]=new long[n+1];
        p[0] = arr[0];
        
        for (int i = 1; i < n; ++i)
            p[i] = p[i - 1] + (long)arr[i];
        
        s[n-1]=arr[n-1];
        
        for (int i = n - 2; i >= 0; i--)
             s[i] = s[i + 1] + (long)arr[i];
        
        long mn=Long.MAX_VALUE;
        long avg=0;
            
        for(int i=0;i<n;i++)
        {
            if(n-i-1!=0){
            avg=Math.abs((p[i]/(i+1))-(s[i+1]/(n-i-1)));
            }
            else
            {
              avg=Math.abs((p[i]/(i+1)));  
            }
            if(avg<mn)
            {
                idx=i;
                mn=avg;
            }
        }
        return idx;
        
        
        
    }
}
