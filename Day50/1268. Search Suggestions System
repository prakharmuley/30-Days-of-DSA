Problem Link: https://leetcode.com/problems/search-suggestions-system/


//Appraoch 1
class Solution {
    public List<List<String>> suggestedProducts(String[] products, String searchWord) {
         List<List<String>> result = new ArrayList<>();
        if(searchWord.length()==0 || products.length==0)
        return result;
    
          
    Arrays.sort(products);
    
    for(int i=1;i<searchWord.length()+1;i++)
    {
        String str = searchWord.substring(0,i);
        
        
        List<String> temp = new ArrayList<>();
       
        for(int j=0;j<products.length;j++)
        {
            if(str.length()<=products[j].length())
            {    
                String product = products[j].substring(0,str.length());
            
                if(product.equals(str))
                    temp.add(products[j]);
               
            }     
        }
        
        if(temp.size()>3)         
            result.add(temp.subList(0,3));
        else
            result.add(temp);
        
    }
        return result;
 }
}



//Approach 2
 public List<List<String>> suggestedProducts(String[] products, String searchWord) {
        Arrays.sort(products);
        List<List<String>> suggestedWords = new ArrayList<>();
        for (int i = 0; i < searchWord.length(); i++){
            String prefix = searchWord.substring(0, i + 1);
            int index = Arrays.binarySearch(products, prefix);
            if (index < 0) index = -(index+1);
            List<String> words = new ArrayList<>();
            for (int j = index; j < Math.min(index + 3, products.length); j++){
                if (products[j].startsWith(prefix)) words.add(products[j]);
            }
            suggestedWords.add(words);    
        }
        return suggestedWords;
 }    
