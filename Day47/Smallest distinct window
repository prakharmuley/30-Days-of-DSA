Problem Link: https://practice.geeksforgeeks.org/problems/smallest-distant-window3132/1



// { Driver Code Starts
//Initial Template for Java

import java.util.*;
import java.lang.*;
import java.io.*;

class GFG {
	public static void main(String[] args) throws IOException
	{
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        int t = Integer.parseInt(br.readLine().trim());
        while(t-->0)
        {
            String str = br.readLine();
            
            Solution obj = new Solution();
            System.out.println(obj.findSubString(str));
            
        }
	}
}

// } Driver Code Ends


//User function Template for Java

class Solution {
    public int findSubString( String s) {
        int h[]=new int[256];
        for(char c: s.toCharArray()) h[c]++;
        int l=0;
        for(int x: h) 
        {
            if(x!=0) l++;
        }
        Arrays.fill(h,0);
        
        int d=0;
        int j=0;
        int i=0;
        int st=-1;
        int e=s.length();
        Map<Character,Integer> mp=new HashMap<>();
        while(j<s.length())
        {
           
            while(j<s.length()&&mp.size()<l) {
            char c=s.charAt(j);
            mp.put(c,mp.getOrDefault(c,0)+1);
            j++;
            }
            
            while(i<j&&mp.size()==l)
            {
                char c=s.charAt(i);
                e=Math.min(e,j-i);
                if(mp.get(c)==1) mp.remove(c);
                else mp.put(c,mp.get(c)-1);
                
                i++;
            }
            
        }
     
        return Math.abs(e);
    }
}
