// { Driver Code Starts
//Initial Template for Java


//Initial Template for Java


import java.io.*;
import java.util.*;


 // } Driver Code Ends
//User function Template for Java


 
class Solution
{ 
    // Method to calculate distinct sub-array 
    static int countDistinctSubarray(int arr[], int n) 
    { 
      Map<Integer,Integer> mp=new HashMap<>();
      for(int x: arr) 
      {
          mp.put(x,mp.getOrDefault(x,0)+1);
      }
      int k=mp.size();
      mp.clear();
      int ans=0,j=0;;
      for(int i=0;i<n;i++)
      {
          mp.put(arr[i],mp.getOrDefault(arr[i],0)+1);
          while(mp.size()==k)
          {
              ans+=(n-i);
              mp.put(arr[j],mp.get(arr[j])-1);
              if(mp.get(arr[j])==0) mp.remove(arr[j]);
              j++;
          }
      }
      return ans;
    }
}


// { Driver Code Starts.

// Driver class
class Array {
    
    // Driver code
	public static void main (String[] args) throws IOException{
		// Taking input using buffered reader
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		
		int testcases = Integer.parseInt(br.readLine());
		// looping through all testcases
		while(testcases-- > 0){
		    int n=Integer.parseInt(br.readLine());
		    String line1 = br.readLine();
		    String[] a1 = line1.trim().split("\\s+");
		    int a[]=new int[n];
		    for(int i=0;i<n;i++)
		    {
		        a[i]=Integer.parseInt(a1[i]);
		    }
		    Solution ob=new Solution();
		    int ans=ob.countDistinctSubarray(a,n);
		    System.out.println(ans);
		    
		}
	}
}
  // } Driver Code Ends
