Problem Link: https://practice.geeksforgeeks.org/problems/partition-a-number-into-two-divisible-parts3605/1#



// { Driver Code Starts
//Initial Template for Java
import java.io.*;
import java.util.*;

class GFG
{
    public static void main(String args[])throws IOException
    {
        BufferedReader read = new BufferedReader(new InputStreamReader(System.in));
        int t = Integer.parseInt(read.readLine());
        while(t-- > 0)
        {
            String str[] = read.readLine().split(" ");
            String S= str[0];
            int a = Integer.parseInt(str[1]);
            int b = Integer.parseInt(str[2]);
            Solution ob = new Solution();
            System.out.println(ob.stringPartition(S,a,b));
        }
    }
}// } Driver Code Ends


//User function Template for Java
class Solution{
    static String stringPartition(String s, int a, int b){
        long n=Long.parseLong(s);
        StringBuilder sb=new StringBuilder();
        for(int i=1;i<s.length();i++)
        {
            int n1=Integer.parseInt(s.substring(0,i));
            int n2=Integer.parseInt(s.substring(i));
            if(n1%a==0&&n2%b==0)
            {
                sb.append(s.substring(0,i)+" "+s.substring(i));
                break;
            }
        }
        return sb.length()==0?"-1":sb.toString();
    }
}
