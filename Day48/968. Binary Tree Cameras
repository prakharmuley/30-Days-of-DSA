Problem Link: https://leetcode.com/problems/binary-tree-cameras/




/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    //-1 ned camera
    //1 covered by another camera
    //0 i m a camera
    public int camera(TreeNode root, int[] ans)
    {
        if(root==null) return 1;
        int lchild=camera(root.left,ans);
        int rchild=camera(root.right,ans);
        if(lchild==-1||rchild==-1) 
        {
            ans[0]++;
            return 0;
        }
        if(lchild==0||rchild==0)
        {
            return 1;
        }
        return -1;
    }
    public int minCameraCover(TreeNode root) {
        int ans[]=new int[1];
       if(camera(root,ans)==-1) ans[0]++;
        return ans[0];
    }
}
