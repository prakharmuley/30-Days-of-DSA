Problem Link: https://leetcode.com/problems/unique-paths-ii/



class Solution {
    private int[][] dp;
    private int ans;
    public int dfs(int i, int j, int[][] obs)
    {
        if(i<0||j<0||i>=obs.length||j>=obs[0].length||obs[i][j]==1) return 0;
         if (dp[i][j] != -1) {
            return dp[i][j];
        }
           
         if(i==obs.length-1&&j==obs[0].length-1&&obs[i][j]==0) {dp[i][j]=1;} 
        
        else
            dp[i][j]=dfs(i,j+1,obs)+dfs(i+1,j,obs);
        
        
        return dp[i][j];
        
    }
    public int uniquePathsWithObstacles(int[][] obs) {
       ans=0;
        dp=new int[obs.length+1][obs[0].length+1];
        for(int i=0;i<=obs.length;i++)
        {
            for(int j=0;j<=obs[0].length;j++) dp[i][j]=-1;
        }
        ans+=dfs(0,0,obs);
        
        
        
        return ans;
    }
}
