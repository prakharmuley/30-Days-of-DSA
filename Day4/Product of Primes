Problem Link: https://practice.geeksforgeeks.org/problems/product-of-primes5328/1#



// { Driver Code Starts
//Initial Template for Java

import java.io.*;
import java.util.*;

class GFG{
    public static void main(String args[])throws IOException
    {
        BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
        int t = Integer.parseInt(in.readLine());
        while(t-- > 0){
            String a[] = in.readLine().trim().split("\\s+");
            long L = Long.parseLong(a[0]);
            long R = Long.parseLong(a[1]);
            
            Solution ob = new Solution();
            System.out.println(ob.primeProduct(L, R));
        }
    }
}// } Driver Code Ends


//User function Template for Java

class Solution{
    static long MOD=(long)(1e9+7);
    
    static long primeProduct(long l, long r){
     // generate_sieve(prime);
     if((l==1&&r==1)) return 1;
      boolean prime[]=new boolean[(int)r+1];
      for(long i=2;i*i<=r;i++)
      {
          if(!prime[(int)i]){
              for(long j=2;j*i<=r;j++)
              {
                  prime[(int)(j*i)]=true;
              }
          }
      }
      long res=(long)1;
      for(long i=l;i<=r;i++)
      {
          if(!prime[(int)i])
          {
              res=((res%MOD)*(i%MOD))%MOD;
          }
      }
      return res;
    }
}
